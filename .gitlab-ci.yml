stages:
  - test
  - lint
  - deploy

variables:
  DOCKER_DRIVER: overlay2
  GIT_SUBMODULE_STRATEGY: normal

test:
  stage: test
  image: python:3.8
  variables:
    DJANGO_SETTINGS_MODULE: swp.settings.test
    ENVIRONMENT: test
    SECRET_KEY: this-is-not-a-secret-key
    DATABASE_HOST: postgres
    ELASTICSEARCH_HOSTNAME: elasticsearch
    ELASTICSEARCH_PORT: 9200
    ELASTICSEARCH_PASSWORD: elastic
    ELASTICSEARCH_VERIFY_CERTS: f
  tags:
    - docker
  services:
    - name: postgres:11
      variables:
        POSTGRES_DB: swp
        POSTGRES_USER: swp
        POSTGRES_PASSWORD: swp
    - name: elasticsearch:8.4.3
      variables:
        discovery.type: single-node
        ELASTIC_PASSWORD: elastic
  before_script:
    - apt update && apt install -y gettext
    - pip install -U pip coverage
    - pip install -Ur requirements.txt
    - python manage.py search_index --create
  script:
    - python manage.py generate-schemes
    - coverage run manage.py test --noinput
    - coverage report
  artifacts:
    paths:
      - swp/assets/schemes
    expire_in: 30 minutes

lint:
  stage: lint
  image: node:10
  tags:
    - docker
  dependencies:
    - test
  before_script:
    - npm install
  script:
    - npm run eslint
    - npm run stylelint

.deploy_template: &deploy_definition
  stage: deploy
  image: registry.cosmocode.de/cosmocode/fabfileng:latest
  tags:
    - docker
  before_script:
    - mkdir ~/.ssh; chmod 0700 ~/.ssh
    - echo "$PRIVATE_DEPLOY_KEY" > ~/.ssh/id_rsa && chmod 0400 ~/.ssh/id_rsa
    - cp /fabfile.py $PWD
  script:
    - fab deploy

deploy_production:
  <<: *deploy_definition
  environment:
    name: production
    url: https://production.swp.cosmoco.de
  tags:
    - docker
    - always_on
  only:
    - production

deploy_staging:
  <<: *deploy_definition
  environment:
    name: staging
    url: https://staging.swp.cosmoco.de
  tags:
    - docker
    - always_on
  only:
    - master
    - staging
