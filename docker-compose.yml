version: '3.9'

services:
  swp:
    image: swp
    build: .
    command: python manage.py runserver 0.0.0.0:8000
    volumes:
      - .:/app
    ports:
      - "8000:8000"
    environment:
      - DJANGO_SETTINGS_MODULE=swp.settings.dev
      - ENVIRONMENT=develop
      - DATABASE_HOST=db
      - REDIS_HOST=redis
      - ELASTICSEARCH_HOSTNAME=elasticsearch
      - ELASTICSEARCH_SCHEME=http
      - ELASTICSEARCH_PASSWORD=elastic
    depends_on:
      - db
      - redis
      - elasticsearch
    stop_signal: SIGINT

  db:
    image: postgres:13
    restart: unless-stopped
    environment:
      - POSTGRES_DB=swp
      - POSTGRES_USER=swp
      - POSTGRES_PASSWORD=swp
    volumes:
      - pg-data:/var/lib/postgresql/data
    ports:
      - "5432:5432"

  redis:
    image: redis:4

  elasticsearch:
    image: elasticsearch:8.4.3
    environment:
      - discovery.type=single-node
      - ELASTIC_PASSWORD=elastic
      - "ES_JAVA_OPTS=-Xms750m -Xmx750m"
      - xpack.security.enabled=false
    volumes:
      - elastic:/usr/share/elasticsearch/data

  celery:
    image: swp
    command: celery -A swp worker -B -Q celery,scraper -l DEBUG --purge
    environment:
      - DJANGO_SETTINGS_MODULE=swp.settings.dev
      - ENVIRONMENT=develop
      - DATABASE_HOST=db
      - REDIS_HOST=redis
      - ELASTICSEARCH_HOSTNAME=elasticsearch
      - ELASTICSEARCH_SCHEME=http
      - ELASTICSEARCH_PASSWORD=elastic
    volumes:
      - .:/app
    depends_on:
      - db
      - redis
      - elasticsearch

  bootstrap:
    image: swp
    volumes:
      - .:/app
    environment:
      - DJANGO_SETTINGS_MODULE=swp.settings.dev
      - ENVIRONMENT=develop
      - DATABASE_HOST=db
      - REDIS_HOST=redis
      - ELASTICSEARCH_HOSTNAME=elasticsearch
      - ELASTICSEARCH_SCHEME=http
      - ELASTICSEARCH_PASSWORD=elastic
      - ELASTICSEARCH_VERIFY_CERTS=off
    depends_on:
      - db
      - redis
      - elasticsearch
    entrypoint: [ '/bin/sh', '-c' ]
    command:
      - |
        /wait-for-it.sh -h db -p 5432 -t 15
        /wait-for-it.sh -h elasticsearch -p 9200 -t 90
        python manage.py migrate
        python manage.py generate-schemes
        python manage.py compile-translations
        python manage.py loaddata groups
        python manage.py search_index --rebuild -f

  frontend:
    image: node:14
    working_dir: /app/
    entrypoint: [ '/bin/sh', '-c' ]
    depends_on:
      - bootstrap
    command:
      - |
        npx npm install
        npx browserslist@latest --update-db
        npm run watch
    volumes:
      - .:/app

volumes:
  pg-data:
  elastic:
