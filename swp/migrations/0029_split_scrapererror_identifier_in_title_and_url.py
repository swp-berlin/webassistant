# Generated by Django 3.1.4 on 2021-03-25 17:03

from django.db import migrations, models

import swp.models.fields
from swp.models.constants import MAX_TITLE_LENGTH, MAX_URL_LENGTH


def is_url_identifier(value):
    return value.startswith('http://') or value.startswith('https://')


def split_identifier(apps, schema_editor):
    ScraperError = apps.get_model('swp.ScraperError')

    non_publication_errors = ScraperError.objects.filter(publication__isnull=True)
    for error in non_publication_errors.exclude(identifier=''):
        if is_url_identifier(error.identifier):
            error.url = error.identifier[:MAX_URL_LENGTH]
            error.save(update_fields=['url'])
        else:
            error.title = error.identifier[:MAX_TITLE_LENGTH]
            error.save(update_fields=['identifier'])


def merge_identifier(apps, schema_editor):
    ScraperError = apps.get_model('swp.ScraperError')

    non_publication_errors = ScraperError.objects.filter(publication__isnull=True)
    for error in non_publication_errors.filter(identifier=''):
        error.identifier = error.title or error.url
        error.save(update_fields=['identifier'])


class Migration(migrations.Migration):

    dependencies = [
        ('swp', '0028_long_publication_tags'),
    ]

    operations = [
        migrations.AddField(
            model_name='scrapererror',
            name='title',
            field=models.CharField(blank=True, max_length=255, verbose_name='title'),
        ),
        migrations.AddField(
            model_name='scrapererror',
            name='url',
            field=swp.models.fields.LongURLField(blank=True, max_length=1024, verbose_name='url'),
        ),
        migrations.RunPython(
            split_identifier,
            reverse_code=merge_identifier,
        ),
    ]
