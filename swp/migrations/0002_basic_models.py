# Generated by Django 3.1.2 on 2020-11-25 11:26

import django.contrib.postgres.fields
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import swp.models.abstract
import swp.models.user


class Migration(migrations.Migration):

    dependencies = [
        ('swp', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Monitor',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_active', models.BooleanField(default=True, verbose_name='active')),
                ('name', models.CharField(max_length=100, verbose_name='name')),
                ('recipients', django.contrib.postgres.fields.ArrayField(base_field=models.EmailField(max_length=254), size=None, verbose_name='recipients')),
                ('interval', models.IntegerField(verbose_name='interval')),
                ('last_sent', models.DateTimeField(blank=True, null=True, verbose_name='last sent')),
                ('created', models.DateTimeField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
            ],
            options={
                'verbose_name': 'monitor',
                'verbose_name_plural': 'monitors',
            },
            managers=[
                ('objects', swp.models.abstract.ActivatableManager()),
            ],
        ),
        migrations.CreateModel(
            name='Scraper',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_active', models.BooleanField(default=True, verbose_name='active')),
                ('data', models.JSONField(verbose_name='data')),
                ('start_url', models.URLField(verbose_name='start URL')),
                ('checksum', models.CharField(max_length=64, unique=True, verbose_name='checksum')),
                ('interval', models.IntegerField(verbose_name='interval')),
                ('last_run', models.DateTimeField(blank=True, null=True, verbose_name='last run')),
                ('created', models.DateTimeField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
            ],
            options={
                'verbose_name': 'scraper',
                'verbose_name_plural': 'scrapers',
            },
            managers=[
                ('objects', swp.models.abstract.ActivatableManager()),
            ],
        ),
        migrations.CreateModel(
            name='ScraperType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True, verbose_name='name')),
                ('config', models.JSONField(default=dict, verbose_name='config')),
            ],
            options={
                'verbose_name': 'scraper type',
                'verbose_name_plural': 'scraper types',
            },
        ),
        migrations.CreateModel(
            name='Thinktank',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='name')),
                ('description', models.TextField(blank=True, verbose_name='description')),
                ('url', models.URLField(help_text='Link to homepage', verbose_name='URL')),
                ('unique_field', models.CharField(max_length=50, verbose_name='unique field')),
                ('created', models.DateTimeField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
            ],
            options={
                'verbose_name': 'think tank',
                'verbose_name_plural': 'think tanks',
            },
        ),
        migrations.AlterModelManagers(
            name='user',
            managers=[
                ('objects', swp.models.user.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='ThinktankFilter',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('query', models.CharField(max_length=1024, verbose_name='query')),
                ('monitor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='thinktank_filters', to='swp.monitor', verbose_name='monitor')),
                ('thinktank', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='filters', to='swp.thinktank', verbose_name='think tank')),
            ],
            options={
                'verbose_name': 'think tank filter',
                'verbose_name_plural': 'think tank filters',
            },
        ),
        migrations.CreateModel(
            name='ScraperError',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(default='', max_length=8, verbose_name='error code')),
                ('message', models.TextField(verbose_name='message')),
                ('timestamp', models.DateTimeField(default=django.utils.timezone.now, editable=False, verbose_name='timestamp')),
                ('scraper', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='errors', to='swp.scraper', verbose_name='scraper')),
            ],
            options={
                'verbose_name': 'scraping error',
                'verbose_name_plural': 'scraping errors',
                'get_latest_by': 'timestamp',
            },
        ),
        migrations.AddField(
            model_name='scraper',
            name='thinktank',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='scrapers', to='swp.thinktank', verbose_name='think tank'),
        ),
        migrations.AddField(
            model_name='scraper',
            name='type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='scrapers', to='swp.scrapertype', verbose_name='type'),
        ),
        migrations.CreateModel(
            name='Publication',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ris_type', models.CharField(default='ICOMM', max_length=7, verbose_name='reference type')),
                ('title', models.CharField(max_length=255, verbose_name='title')),
                ('subtitle', models.CharField(blank=True, max_length=255, verbose_name='subtitle')),
                ('abstract', models.TextField(blank=True, verbose_name='abstract')),
                ('authors', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=100), blank=True, null=True, size=None, verbose_name='authors')),
                ('publication_date', models.DateField(null=True, verbose_name='publication date')),
                ('last_access', models.DateTimeField(editable=False, null=True, verbose_name='last access')),
                ('url', models.URLField(verbose_name='URL')),
                ('pdf_url', models.URLField(blank=True, verbose_name='PDF URL')),
                ('pdf_pages', models.PositiveIntegerField(default=0, verbose_name='number of pages')),
                ('tags', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=32), blank=True, null=True, size=None, verbose_name='tags')),
                ('created', models.DateTimeField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('scrapers', models.ManyToManyField(related_name='scraped_publications', to='swp.Scraper', verbose_name='scrapers')),
                ('thinktank', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='publications', to='swp.thinktank', verbose_name='think tank')),
            ],
            options={
                'verbose_name': 'publication',
                'verbose_name_plural': 'publications',
            },
        ),
    ]
